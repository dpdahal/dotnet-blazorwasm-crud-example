@page "/"
@using Models
@inject NavigationManager NavigationManager


<PageTitle>CRUD Application</PageTitle>
<div class="container">
    <div class="row">
        <div class="col-md-12">
      
<h1>CRUD Application</h1>


<button class="btn btn-success" @onclick="AddNewStudent">Add Student</button>
<hr>
@if(students is null){  
    <h1>Loading Data.........</h1>
}else{
  <DeleteStudent Students="@currentStudent" onClose="@OnDeleteModelClose">

  </DeleteStudent>

    <table  class="table table-striped">
    <thead class="table-dark">
        <tr>
            <th>S.n</th>
            <th>Name</th>
            <th>Email</th>
            <th>Phone</th>
            <th>Address</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var student in students)
        {
            <tr>
                <td>@student.Id</td>
                <td>@student.Name</td>
                <td>@student.Email</td>
                <td>@student.Phone</td>
                <td>@student.Address</td>
                <td>
                    <button class="btn btn-success" @onclick="(()=>editStudent(student.Id))">Update</button>
                    
                    <button class="btn btn-danger"
                    data-bs-toggle="modal" data-bs-target="#exampleModal"
                    @onclick="(()=>currentStudent=student)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>
}

      
        </div>
    </div>
</div>

@code {

    private Students[]? students;
    private Students? currentStudent;

        protected override void OnInitialized()
        {
            students = StudentData.GetStudents();
        }

        public void AddNewStudent(){
            NavigationManager.NavigateTo("/student");
        }

        private void editStudent(int id){
            NavigationManager.NavigateTo($"/student/{id}");
        }

        private void OnDeleteModelClose(bool accepted){
            if(accepted){
                StudentData.DeleteStudent(currentStudent!.Id);
                students = StudentData.GetStudents();
            }
        }

}